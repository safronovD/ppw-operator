name: CD on Main Workflow

on: [push]

jobs:
  build:
    name: Generate dependencies
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-go@v2.1.3
        with:
          go-version: ^1.15

      - name: Setup environment
        run: |
          sudo apt update && sudo apt install build-essential
          export GOBIN=$GOPATH/bin
          echo GOBIN=`go env GOPATH`/bin >> $GITHUB_ENV

      - name: Dependencies
        run: |
          make all-dependencies
          make generate-deepcopy

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: manager-gen
          path: pkg/
    
  dockerize:
    name: Dockerize ppw-operator
    env:
      IMAGE_NAME: ppw-operator
      IMAGE_REGISTRY: docker.pkg.github.com
      VERSION: latest
    runs-on: ubuntu-18.04
    needs: [build]
    if: "!contains(github.event.head_commit.message, 'pkg')"
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Downloading artifact
        uses: actions/download-artifact@v2.0.6
        with:
          name: manager-gen
          path: pkg/
        
      - name: Build image
        run: docker build . -f Dockerfile -t $IMAGE_NAME

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ secrets.GITPKGS_USERNAME }}
          password: ${{ secrets.GITPKGS_PASSWORD }}

      - name: Getting tag
        run: |
          ls pkg/
          VER_REF=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VER_REF | sed -e 's/^v//')
          echo VERSION=$VERSION

      - name: Push image
        run: |
          IMAGE_ID=$IMAGE_REGISTRY/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    needs: [dockerize]
    if: "!contains(github.event.head_commit.message, 'cd skip')"
    steps:
      - uses: actions/checkout@v2.3.4

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker
      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GCE_ZONE }}

      - name: Kubectl deploy
        run: |
          kubectl apply -f ./deploy/crd.yaml
          kubectl apply -f ./deploy/controller.yaml
