name: Publishing docker image

on:
  pull_request:
    branches: [main, release]
    tags: ['v*']
  push:
    branches: [dev] #TODO: remove after finish workflow

  
jobs:
  build:
    name: Generate dependencies
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-go@v2.1.3
        with:
          go-version: ^1.15

      - name: Setup environment
        run: |
          sudo apt update && sudo apt install build-essential
          export GOBIN=$GOPATH/bin

      - name: Dependencies
        run: |
          make all-dependencies
          make generate-deepcopy

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: manager-gen
          path: pkg/
    
  dockerize:
    name: Dockerize ppw-operator
    env:
      IMAGE_NAME: ppw-operator
      IMAGE_REGISTRY: docker.pkg.github.com
    runs-on: ubuntu-latest
    needs: [build]
    if: "contains(github.event.head_commit.message, 'pkg')"
    steps:
      - uses: actions/checkout@v2

      - name: Downloading artifact
        uses: actions/download-artifact@v2.0.6
        with:
          name: manager-gen
          path: pkg/
        
      # - name: Build image
      #   run: docker build . -f Dockerfile -t $IMAGE_NAME

      # - name: Log into registry
      #   run: echo "${{ secrets.GITPKGS_PASSWORD }}" | docker login docker.pkg.github.com -u ${{ secrets.GITPKGS_USERNAME }} --password-stdin

      - name: Getting tag
        run: |
          ls pkg/
          IMAGE_ID=$IMAGE_REGISTRY/${{ github.repository }}/$IMAGE_NAME
          VERSION=latest
          VER_REF=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VER_REF | sed -e 's/^v//')
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

      # - name: Push image
      #   run: |
      #     IMAGE_ID=$IMAGE_REGISTRY/${{ github.repository }}/$IMAGE_NAME
      #     IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
      #     docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:$VERSION
